/*

Question Link: https://codeforces.com/problemset/problem/1992/D

*/

#include<bits/stdc++.h>
using namespace std;
 
#define fast                          \
    ios_base::sync_with_stdio(false); \
    cin.tie(NULL)
 
#define yes cout << "YES" << endl;
#define no cout << "NO" << endl;
#define sp <<" "<<
#define spp <<" ";
#define all(x) (x).begin(), (x).end()
#define allrev(x) (x).begin(),(x).end(),greater<ll>()
#define minus cout<<-1<<endl;
#define zero cout<<0<<endl;
#define one cout<<1<<endl;
 
#define ll long long
#define pii pair<int, int>
#define pll pair<long long, long long>
#define vi vector<int>
#define vll vector<long long>
#define mii map<int, int>
#define mll map<long long,long long>
#define si set<int>
#define sc set<char>
typedef vector<ll> vl;
typedef vector<int> vin;
typedef vector<char> vc;
typedef vector<string> vs;
typedef long int int32;
typedef unsigned long int uint32;
typedef long long int int64;
typedef unsigned long long int  ull;
ll i,j,k;
 
#define f(i,s,e) for(long long int i=s;i<e;i++)
#define cf(i,s,e) for(long long int i=s;i<=e;i++)
#define rf(i,e,s) for(long long int i=e-1;i>=s;i--)
#define pb push_back
#define eb emplace_back
 
template <class T>
void print_v(vector<T> &v) {  for (auto x : v) cout << x << " "; cout <<endl; }
 
#define MOD 1000000007
#define PI 3.1415926535897932384626433832795
 

//GCD
ll gcd(ll a,ll b) { if (b==0) return a; return gcd(b, a%b); }

//LCM
ll lcm(ll a,ll b) { return a/gcd(a,b)*b; }

//Uppercase to Lowercase
string to_upper(string a) { for (int i=0;i<(int)a.size();++i) if (a[i]>='a' && a[i]<='z') a[i]-='a'-'A'; return a; }

//Lowercase to uppercase
string to_lower(string a) { for (int i=0;i<(int)a.size();++i) if (a[i]>='A' && a[i]<='Z') a[i]+='a'-'A'; return a; }

//Prime number
bool prime(ll a) { if (a==1) return 0; for (int i=2;i<=round(sqrt(a));++i) if (a%i==0) return 0; return 1; }

//Grid Type validation for Graph
vector<pll> gridD={{-1,0},{1,0},{0,-1},{0,1}};
bool valid(ll a,ll b,ll n,ll m){
    if(a<0 or a>=n or b<0 or b>=m)
        return false;
    return true;
}

//Factorial
ull fact(ll n){
    if(n==0 or n==1)
        return 1;
    ull res=1;
    cf(i,2,n){
        res*=i;
    }
    return res;
}
 
 
//Seive of Eratosthenes

const ll seiveN=1001;
//Prime--->marked with 1 in the array
//Non Prime--->marked with 0 in the array
ll isPrime[seiveN];

void seive(){
   f(i,2,seiveN){
    isPrime[i]=1;
   }
   isPrime[0]=isPrime[1]=0;
    for(i=2;i*i<seiveN;i++){
        if(isPrime[i]){
            for(ll j=i*i;j<seiveN;j+=i){
                isPrime[j]=0;
            }
        }
    }
}

//Determining MSB position
ll msb_position(ll n){
    if(n==0)
        return 0;
    return ((ll)log2(n)+1);
}


//Starts from here...

void SIR(){
    ll n,m,k;
    cin>>n>>m>>k;
    string s;
    cin>>s;
    i=-1;
    while(i<n){
        if(i==-1){
            if(i+m>=n){
                yes
                return;
            }
            else{
                ll start=i+1;
                ll end=i+m;
                ll counter=0;
                rf(j,end+1,start){
                    if(s[j]=='L'){
                        i=j;
                        counter=1;
                        break;
                    }
                }
                if(counter==0){
                    rf(j,end+1,start){
                        if(s[j]=='W'){
                            i=j;
                            counter=1;
                            k--;
                            break;
                        }
                    }
                    if(k<0){
                        no 
                        return;
                    }
                }
                if(counter==0){
                    no
                    return;
                }
                continue;
            }
        }
        if(s[i]=='L' and i+m>=n){
            yes
            return;
        }
        if(s[i]=='W'){
            if(i+1==n){
                yes
                return;
            }
            if(i+1<n and s[i+1]=='W'){
                k--;
                if(k<0){
                    no
                    return;
                }
            }
            else if(i+1<n and s[i+1]=='C'){
                no
                return;
            }
            i++;
        }
        else if(s[i]=='L'){
            if(i+m<n and s[i+m]=='L')
                i+=m;
            else if(i+m<n and (s[i+m]=='W' or s[i+m]=='C')){
                ll start=i+1;
                ll end=i+m;
                ll counter=0;
                rf(j,end+1,start){
                    if(s[j]=='L'){
                        i=j;
                        counter=1;
                        break;
                    }
                }
                if(counter==0){
                    rf(j,end+1,start){
                        if(s[j]=='W'){
                            i=j;
                            counter=1;
                            k--;
                            break;
                        }
                    }
                    if(k<0){
                        no 
                        return;
                    }
                }
                if(counter==0){
                    no
                    return;
                }
            }
        }        
    }
}

int main(){
    fast;
    ll tc;
    tc = 1;
    cin>>tc;
    for(ll test=1;test<=tc;test++){
        SIR();
    }
    return 0;
}
